<?php


namespace App\Classes\PagSeguro;

/**
 * @author  Flavio Amorim
 */
class PagSeguroErro
{

    public function myErros($erros)
    {
        $errosAll = $this->erros();
        $dataErros = '';
        /*
          O retorno de erros do pagseguro, pode ser um array de erros ou então um codigo de erro
         */
        if (isset($erros['error']['code'])) {
            $dataErros .= '* ' . $errosAll[$erros['error']['code']] . "<br>";
        } else {
            foreach ($erros['error'] as $value) {
                $dataErros .= '* ' . $errosAll[$value['code']] . "<br>";
            }
        }

        return $dataErros;
    }

    public function erros()
    {

        return $erros = array(
            'bad_request' => 'O pagamento não pode ser processado',
            '5003' => 'falha de comunicação com a instituição financeira',
            '10000' => 'bandeira inválida',
            '10001' => "número do cartão inválido",
            '10002' => "data no formato inválido",
            '10003' => "código de segurança inválido",
            '10004' => "cvv obrigatório",
            '10006' => "código de segurança inválido",
            '53004' => "quantidade de ítens inválido",
            '53005' => "moeda obrigatória",
            '53006' => "moeda inválida",
            '53007' => "tamanho do campo referência inválido",
            '53008' => "url de notificação inválida",
            '53009' => "tamanho da url de notificação inválida",
            '53010' => "email do comprador inválido.",
            '53011' => "email do comprador inválido",
            '53012' => "tamanho do campo email do comprador inválido",
            '53013' => "nome do comprador obrigatório",
            '53014' => "nome do comprador inválido",
            '53015' => "tamanho do campo nome do comprador inválido",
            '53017' => "cpf do comprador inválido",
            '53018' => "código de área do telefone inválido",
            '53019' => "tamanho do campo código de área do telefone inválido",
            '53020' => "telefone obrigatório",
            '53021' => "telefone inválido",
            '53022' => "CEP obrigatório",
            '53023' => "CEP inválido",
            '53024' => "rua do endereço obrigatório",
            '53025' => "rua do endereço inválido",
            '53026' => "número do endereço obrigatório",
            '53027' => "número do endereço inválido",
            '53028' => "complemento do endereço inválido",
            '53029' => "bairro do endereço obrigatório",
            '53030' => "bairro do endereço inválido",
            '53031' => "cidade do endereço obrigatória",
            '53032' => "cidade do endereço inválida",
            '53033' => "estado do endereço obrigatório",
            '53034' => "estado do endereço inválido",
            '53035' => "país do endereço obrigatório.",
            '53036' => "país do endereço inválido",
            '53037' => "token do cartão de crédito obrigatório",
            '53038' => "quantidade de parcelas obrigatória",
            '53039' => "quantidade de parcelas inválida",
            '53040' => "valor da parcela obrigatória",
            '53041' => "valor da parcela inválida",
            '53042' => "portador do cartão obrigatório",
            '53043' => "portador do cartão inválido",
            '53044' => "Nome do cartão inválido",
            '53045' => "CPF do portador do cartão obrigatório",
            '53046' => "CPF do portador do cartão inválido",
            '53047' => "data de nascimento do portador do cartão obrigatório",
            '53048' => "data de nascimento do portador do cartão inválido",
            '53049' => "código de área do portador do cartão obrigatório",
            '53050' => "código de área do portador do cartão inválido",
            '53051' => "telefone do portador do cartão obrigatório",
            '53052' => "telefone  do portador do cartão inválido",
            '53053' => "CEP do portador do cartão obrigatório",
            '53054' => "CEP do portador do cartão inválido",
            '53055' => "rua do portador do cartão obrigatório",
            '53056' => "rua do portador do cartão inválido",
            '53057' => "número do endereço do portador do cartão obrigatório",
            '53058' => "número do endereço do portador do cartão inválido",
            '53059' => "tamanho do campo complemento do endereço do portador do cartão inválido",
            '53060' => "bairro do portador do cartão obrigatório",
            '53061' => "tamanho do campo bairro do portador do cartão inválido",
            '53062' => "cidade do portador do cartão obrigatório",
            '53063' => "tamanho do campo cidade do portador do cartão inválido",
            '53064' => "estado do portador do cartão obrigatório",
            '53065' => "estado do portador do cartão inválido",
            '53066' => "país do portador do cartão obrigatório",
            '53067' => "tamanho do campo país do portador do cartão inválido",
            '53068' => "tamanho do email do vendedor inválido",
            '53069' => "email do vendedor inválido",
            '53070' => "código do ítem obrigatório",
            '53071' => "tamanho do código do ítem inválido",
            '53072' => "descrição do ítem obrigatório",
            '53073' => "tamanho do campo ítem inválido",
            '53074' => "quantidade de ítens obrigatória",
            '53075' => "quantidade de ítens fora do limite",
            '53076' => "quantidade de ítens inválido",
            '53077' => "montante do ítem obrigatório",
            '53078' => "montante do ítem inválido.",
            '53079' => "montante fora do limite",
            '53081' => "comprador é igual ao vendedor",
            '53084' => "vendedor inválido, verifique se é uma conta com status de vendedor",
            '53085' => "método de pagamento indisponível",
            '53086' => "montante total acima do limite do cartão",
            '53087' => "dados do cartão inválidos",
            '53091' => "hash do comprador inválido",
            '53092' => "bandeira do cartão não aceita",
            '53095' => "tipo de entrega inválido",
            '53096' => "custo de entrega inválido",
            '53097' => "custo da entrega fora do limite",
            '53098' => "valor total é negatívo",
            '53099' => "montante extra inválido.",
            '53101' => "modo de pagamento inválido, valores válidos são default e gateway",
            '53102' => "método de pagamento inválido, valores válidos são creditCard, boleto e eft",
            '53104' => "custo de entrega informado, endereço de entrega deve ser completo",
            '53105' => "informações do comprador informado, email também deve ser informado",
            '53106' => "portador do cartão incompleto",
            '53109' => "endereço do comprador informado, email do comprador também deve ser informado",
            '53110' => "banco eft obrigatório",
            '53111' => "banco eft não aceito",
            '53115' => "data de nascimento do comprador inválida",
            '53117' => "CPNJ do comprador inválido",
            '53122' => "domínio do email do comprador inválido. Você deve usar um email @sandbox.pagseguro.com.br",
            '53140' => "quantidade de parcelas fora do limite. O valor deve ser maior que zero",
            '53141' => "comprador bloqueado",
            '53150' => "Por favor atualize a página para nova tentativa",
            '53142' => "token do cartão de crédito inválido",
            '14007' => "status da transação não permite reembolso",

            '10003' => 'Email invalid value.',
            '10005' => 'The accounts of the vendor and buyer can not be related to each other.',
            '10009' => 'Method of payment currently unavailable.',
            '10020' => 'Invalid payment method.',
            '10021' => 'Error fetching vendor data from the system.',
            '10023' => 'Payment Method unavailable.',
            '10024' => 'Unregistered buyer is not allowed.',
            '10025' => 'senderName cannot be blank.',
            '10026' => 'senderEmail cannot be blank.',
            '10049' => 'senderName mandatory.',
            '10050' => 'senderEmail mandatory.',
            '11002' => 'receiverEmail invalid length: .',
            '11006' => 'redirectURL invalid length: .',
            '11007' => 'redirectURL invalid value: .',
            '11008' => 'reference invalid length: .',
            '11013' => 'senderAreaCode invalid value: .',
            '11014' => 'senderPhone invalid value: .',
            '11027' => 'Item quantity out of range: .',
            '11028' => 'Item amount is required.',
            '11040' => 'maxAge invalid pattern: .',
            '11041' => 'maxAge out of range:',
            '11042' => 'maxUses invalid pattern: .',
            '11043' => 'maxUses out of range: .',
            '11054' => 'abandonURL/reviewURL invalid length: .',
            '11055' => 'abandonURL/reviewURL invalid value: .',
            '11071' => 'preApprovalInitialDate invalid value.',
            '11072' => 'preApprovalFinalDate invalid value.',
            '11084' => 'seller has no credit card payment option.',
            '11101' => 'preApproval data is required.',
            '11163' => 'You must configure a transactions notifications (Notificação de Transações) URL before using this service.',
            '11211' => 'pre-approval cannot be paid twice on the same day.',
            '13005' => 'initialDate must be lower than allowed limit.',
            '13006' => 'initialDate must not be older than 180 days.',
            '13007' => 'initialDate must be lower than or equal finalDate.',
            '13008' => 'search interval must be lower than or equal 30 days.',
            '13009' => 'finalDate must be lower than allowed limit.',
            '13010' => 'initialDate invalid format use  ',
            '13011' => 'finalDate invalid format use  .',
            '13013' => 'page invalid value.',
            '13014' => 'maxPageResults invalid value (must be between 1 and 1000).',
            '13017' => 'initialDate and finalDate are required on searching by interval.',
            '13018' => 'interval must be between 1 and 30.',
            '13019' => 'notification interval is required.',
            '13020' => 'page is greater than the total number of pages returned.',
            '13023' => 'Invalid minimum reference length (1-255)',
            '13024' => 'Invalid maximum reference length (1-255)',
            '17008' => 'pre-approval not found.',
            '17022' => 'invalid pre-approval status to execute the requested operation.',
            '17023' => 'seller has no credit card payment option.',
            '17024' => 'pre-approval is not allowed for this seller .',
            '17032' => 'invalid receiver for checkout: ',
            '17033' => 'preApproval.',
            '17035' => 'Due days format is invalid',
            '17036' => 'Due days value is invalid Any value from 1 to 120 is allowed.',
            '17037' => 'Due days must be smaller than expiration days.',
            '17038' => 'Expiration days format is invalid: .',
            '17039' => 'Expiration value is invalid: Any value from 1 to 120 is allowed.',
            '17061' => 'Plan not found.',
            '17063' => 'Hash is mandatory.',
            '17065' => 'Documents required.',
            '17066' => 'Invalid document quantity.',
            '17067' => 'Payment method type is mandatory.',
            '17068' => 'Payment method type is invalid.',
            '17069' => 'Phone is mandatory.',
            '17070' => 'Address is mandatory.',
            '17071' => 'Sender is mandatory.',
            '17072' => 'Payment method is mandatory.',
            '17073' => 'Credit card is mandatory.',
            '17074' => 'Credit card holder is mandatory.',
            '17075' => 'Credit card token is invalid.',
            '17078' => 'Expiration date reached.',
            '17079' => 'Use limit exceeded.',
            '17080' => 'Pre-approval is suspended.',
            '17081' => 'pre-approval payment order not found.',
            '17082' => 'invalid pre-approval payment order status to execute the requested operation.',
            '17083' => 'Pre-approval is already ',
            '17093' => 'Sender hash or IP is required.',
            '17094' => 'There can be no new subscriptions to an inactive plan.',
            '19001' => 'postalCode invalid Value: .',
            '19002' => 'addressStreet invalid length: .',
            '19003' => 'addressNumber invalid length: .',
            '19004' => 'addressComplement invalid length: .',
            '19005' => 'addressDistrict invalid length: .',
            '19006' => 'addressCity invalid length: .',
            '19007' => 'addressState invalid value: .',
            '19008' => 'addressCountry invalid length: .',
            '19014' => 'senderPhone invalid value: .',
            '19015' => 'addressCountry invalid pattern: .',
            '50103' => 'postal code can not be empty.',
            '50105' => 'address number can not be empty.',
            '50106' => 'address district can not be empty.',
            '50107' => 'address country can not be empty.',
            '50108' => 'address city can not be empty.',
            '50131' => 'The IP address does not follow a valid pattern.',
            '50134' => 'address street can not be empty.',
            '53037' => 'credit card token is required.',
            '53042' => 'credit card holder name is required.',
            '53047' => 'credit card holder birthdate is required.',
            '53048' => 'credit card holder birthdate invalid value: .',
            '53151' => 'Discount value cannot be blank.',
            '53152' => 'Discount value out of range.',
            '53153' => 'not found next payment for this preApproval.',
            '53154' => 'Status cannot be blank.',
            '53155' => 'Discount type is mandatory.',
            '53156' => 'Discount type invalid value.',
            '53157' => 'Discount value out of range.',
            '53158' => 'Discount value is mandatory.',
            '57038' => 'address state is required.',
            '61007' => 'document type is required.',
            '61008' => 'document type is invalid: .',
            '61009' => 'document value is required.',
            '61010' => 'document value is invalid: .',
            '61011' => 'cpf is invalid: .',
            '61012' => 'cnpj is invalid: .',
        );
    }

}
